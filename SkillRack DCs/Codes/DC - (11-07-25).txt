Problem Statement :-

Function - sortAndSplitWords() in DC (Daily Challenge) in SkillRack in C - Programming

Code :-

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void read_from_file(int *index , char **array , char *file_name){
    
    FILE *file_pointer = fopen(file_name , "r");
    
    char row_string[108];
    
    while(fgets(row_string , 108 , file_pointer) != NULL){
        
        char *new_line_address = strchr(row_string , '\n');
        
        if(new_line_address){
            *new_line_address = '\0';
        }
        
        sprintf(array[(*index)++] , "%s" , row_string);
    }
    
    fclose(file_pointer);
}

void merge_sort(int left_pointer , int right_pointer , char **array){
    
    if(left_pointer >= right_pointer){
        return ;
    }
    
    int middle_pointer = (left_pointer + ((right_pointer - left_pointer) / 2));
    
    merge_sort(left_pointer , middle_pointer , array);
    
    merge_sort((middle_pointer + 1) , right_pointer , array);
    
    int size = (right_pointer - left_pointer + 1);
    
    char **temp_array = ((char **) malloc((size * sizeof(char *))));
    
    for(int i = 0 ; (i < size) ; i++){
        temp_array[i] = ((char *) malloc((108 * sizeof(char))));
    }
    
    int temp_array_index = 0;
    
    int pointer_1 = left_pointer;
    
    int pointer_2 = (middle_pointer + 1);
    
    while((pointer_1 <= middle_pointer) && (pointer_2 <= right_pointer)){
        
        if(strcmp(array[pointer_1] , array[pointer_2]) <= 0){
            sprintf(temp_array[temp_array_index++] , "%s" , array[pointer_1++]);
        }else{
            sprintf(temp_array[temp_array_index++] , "%s" , array[pointer_2++]);
        }
    }
    
    while(pointer_1 <= middle_pointer){
        sprintf(temp_array[temp_array_index++] , "%s" , array[pointer_1++]);
    }
    
    while(pointer_2 <= right_pointer){
        sprintf(temp_array[temp_array_index++] , "%s" , array[pointer_2++]);
    }
    
    for(int i = left_pointer , j = 0 ; (i <= right_pointer) ; i++ , j++){
        sprintf(array[i] , "%s" , temp_array[j]);
    }
}

void write_to_file(int starting_index , int ending_index , char **array , char *file_name){
    
    FILE *file_pointer = fopen(file_name , "w");
    
    for(int index = starting_index ; (index < ending_index) ; index++){
        (index == (ending_index - 1)) ? (fprintf(file_pointer , "%s" , array[index])) : (fprintf(file_pointer , "%s\n" , array[index]));
    }
    
    fclose(file_pointer);
}

void sortAndSplitWords(char *file_name_1 , char *file_name_2){
    
    char **words_array = ((char **) malloc((108 * sizeof(char *))));
    
    for(int i = 0 ; (i < 108) ; i++){
        words_array[i] = ((char *) malloc((108 * sizeof(char))));
    }
    
    int words_array_index = 0;
    
    read_from_file(&words_array_index , words_array , file_name_1);
    
    read_from_file(&words_array_index , words_array , file_name_2);
    
    merge_sort(0 , (words_array_index - 1) , words_array);
    
    write_to_file(0 , (words_array_index / 2) , words_array , file_name_1);
    
    write_to_file((words_array_index / 2) , words_array_index , words_array , file_name_2);
}

void printFileContent(char *fileName){
    
    FILE *fp = fopen(fileName,"r");
    
    char ch;
    
    while((ch = fgetc(fp)) != EOF){
        printf("%c", ch);
    }
    
    fclose(fp);
}

int main(){
    
    char file1name[51], file2name[51];
    
    scanf("%s\n%s", file1name, file2name);
    
    sortAndSplitWords(file1name, file2name);
    
    printf("%s:\n", file1name);
    
    printFileContent(file1name);
    
    printf("\n%s:\n", file2name);
    
    printFileContent(file2name);
    
    return 0;
}
