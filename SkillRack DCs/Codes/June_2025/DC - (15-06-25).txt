Problem Statement :-

Function - getEvenLengthWords() in DC (Daily Challenge) in SkillRack in C - Programming

Code :-

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct BoundedArray{
    
    int SIZE;
    
    char **words;
} boundedArray;

int is_even(int N){
    
    return ((N & 1) == 0);
}

boundedArray* getEvenLengthWords(char string[]){
    
    int N = strlen(string);
    
    char **even_length_words_array = ((char **) malloc((N * sizeof(char *))));
    
    for(int i = 0 ; (i < N) ; i++){
        even_length_words_array[i] = ((char *) malloc((N * sizeof(char))));
    }
    
    int even_length_words_array_index = 0;
    
    for(char *string_tokenizer = strtok(string , " ") ; (string_tokenizer != NULL) ; string_tokenizer = strtok(NULL , " ")){
        
        if(is_even(strlen(string_tokenizer))){
            
            sprintf(even_length_words_array[even_length_words_array_index++] , "%s" , string_tokenizer);
        }
    }
    
    (even_length_words_array_index == 0) ? (sprintf(even_length_words_array[even_length_words_array_index++] , "-1")) : (printf(""));
    
    boundedArray *bounded_array_reference = ((boundedArray *) malloc(sizeof(boundedArray)));
    
    (bounded_array_reference -> SIZE) = even_length_words_array_index;
    
    (bounded_array_reference -> words) = even_length_words_array;
    
    return bounded_array_reference;
}

int main(){
    
    char str[1001];
    
    scanf("%[^\n]", str);
    
    boundedArray *bArr = getEvenLengthWords(str);
    
    printf("Even Length Words:\n");
    
    for(int index = 0; index < bArr->SIZE; index++){
        printf("%s\n", bArr->words[index]);
    }
    
    return 0;
}
